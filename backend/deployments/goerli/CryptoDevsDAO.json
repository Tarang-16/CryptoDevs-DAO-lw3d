{
  "address": "0x748AEcb4ae0208828F29E2e4CEDF2434882F90B6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftMarketplace",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cryptoDevsNFT",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yayVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nayVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum CryptoDevsDAO.Vote",
          "name": "vote",
          "type": "uint8"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf2a850de80bbf60d63e7358507b1d0285f440fd947b5a6498e46236433778708",
  "receipt": {
    "to": null,
    "from": "0xfDa537a28d8C137f8519FCC3C1F1aeC8471801C2",
    "contractAddress": "0x748AEcb4ae0208828F29E2e4CEDF2434882F90B6",
    "transactionIndex": 20,
    "gasUsed": "1417611",
    "logsBloom": "0x
    "blockHash": "0xf0e5bb65618199393943c8df11d9cf801a96c601a90939fd456f43e7b3692251",
    "transactionHash": "0xf2a850de80bbf60d63e7358507b1d0285f440fd947b5a6498e46236433778708",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 8342307,
        "transactionHash": "0xf2a850de80bbf60d63e7358507b1d0285f440fd947b5a6498e46236433778708",
        "address": "0x748AEcb4ae0208828F29E2e4CEDF2434882F90B6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fda537a28d8c137f8519fcc3c1f1aec8471801c2"
        ],
        "data": "0x",
        "logIndex": 95,
        "blockHash": "0xf0e5bb65618199393943c8df11d9cf801a96c601a90939fd456f43e7b3692251"
      }
    ],
    "blockNumber": 8342307,
    "cumulativeGasUsed": "8461297",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0690358Ae3e7F7398350c11c54d3219F54947c3c",
    "0x3ab6d31582602950Afd6e174D55e45954699f310"
  ],
  "numDeployments": 2,
  "solcInputHash": "7a0bb9ab5a1c71f08647d1ff466ff59f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftMarketplace\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cryptoDevsNFT\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftTokenId\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yayVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nayVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum CryptoDevsDAO.Vote\",\"name\":\"vote\",\"type\":\"uint8\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CryptoDevsDAO.sol\":\"CryptoDevsDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CryptoDevsDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IFakeNFTMarketplace {\\n    function getPrice() external view returns (uint256);\\n\\n    function available(uint256 _tokenId) external view returns (bool);\\n\\n    function purchase(uint256 _tokenId) external payable;\\n}\\n\\ninterface ICryptoDevsNFT {\\n    function tokenOfOwnerByIndex(\\n        address owner,\\n        uint256 index\\n    ) external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n}\\n\\ncontract CryptoDevsDAO is Ownable {\\n    struct Proposal {\\n        uint256 nftTokenId; // tokenId of the nft to purchase from fake nft marketplace.\\n        uint256 yayVotes; // number of votes in favor.\\n        uint256 nayVotes; // number of votes against\\n        bool executed; // whether the proposal has passed or not\\n        uint256 deadline; // time limit till when you can vote\\n        mapping(uint256 => bool) voters; // check whether the person has voted or not\\n    }\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public numProposals;\\n\\n    IFakeNFTMarketplace nftMarketplace;\\n    ICryptoDevsNFT cryptoDevsNFT;\\n\\n    constructor(address _nftMarketplace, address _cryptoDevsNFT) payable {\\n        nftMarketplace = IFakeNFTMarketplace(_nftMarketplace);\\n        cryptoDevsNFT = ICryptoDevsNFT(_cryptoDevsNFT);\\n    }\\n\\n    modifier nftHoldersOnly() {\\n        require(cryptoDevsNFT.balanceOf(msg.sender) > 0, \\\"Not a DAO member\\\");\\n        _;\\n    }\\n\\n    function createProposal(\\n        uint256 _nftTokenId\\n    ) external nftHoldersOnly returns (uint256) {\\n        require(nftMarketplace.available(_nftTokenId), \\\"NFT_NOT_FOR_SALE\\\");\\n        Proposal storage proposal = proposals[numProposals];\\n        proposal.nftTokenId = _nftTokenId;\\n        proposal.deadline = block.timestamp + 5 minutes;\\n\\n        numProposals++;\\n        return numProposals - 1;\\n    }\\n\\n    modifier activeProposalOnly(uint256 proposalIndex) {\\n        require(\\n            proposals[proposalIndex].deadline > block.timestamp,\\n            \\\"DEADLINE_EXCEEDED\\\"\\n        );\\n        _;\\n    }\\n\\n    enum Vote {\\n        YAY,\\n        NAY // yay = 0, nay = 1\\n    }\\n\\n    function voteOnProposal(\\n        uint256 proposalIndex,\\n        Vote vote\\n    ) external nftHoldersOnly activeProposalOnly(proposalIndex) {\\n        Proposal storage proposal = proposals[proposalIndex];\\n        uint256 voterNFTBalance = cryptoDevsNFT.balanceOf(msg.sender);\\n        uint256 numVotes = 0;\\n\\n        for (uint256 i = 0; i < voterNFTBalance; i++) {\\n            uint256 tokenId = cryptoDevsNFT.tokenOfOwnerByIndex(msg.sender, i);\\n            if (proposal.voters[tokenId] == false) {\\n                numVotes++;\\n                proposal.voters[tokenId] = true;\\n            }\\n        }\\n\\n        require(numVotes > 0, \\\"ALREADY_VERIFIED\\\");\\n\\n        if (vote == Vote.YAY) {\\n            proposal.yayVotes += numVotes;\\n        } else {\\n            proposal.nayVotes += numVotes;\\n        }\\n    }\\n\\n    modifier inactiveProposalOnly(uint256 proposalIndex) {\\n        require(\\n            proposals[proposalIndex].deadline <= block.timestamp,\\n            \\\"Deadline not exceeded\\\"\\n        );\\n        require(\\n            proposals[proposalIndex].executed == false,\\n            \\\"Proposal Already Executed\\\"\\n        );\\n        _;\\n    }\\n\\n    function executeProposal(\\n        uint256 proposalIndex\\n    ) external nftHoldersOnly inactiveProposalOnly(proposalIndex) {\\n        Proposal storage proposal = proposals[proposalIndex];\\n        if (proposal.yayVotes > proposal.nayVotes) {\\n            uint256 nftPrice = nftMarketplace.getPrice();\\n            require(address(this).balance >= nftPrice, \\\"NOT ENOUGH FUNDS\\\");\\n            nftMarketplace.purchase{value: nftPrice}(proposal.nftTokenId);\\n        }\\n        proposal.executed = true;\\n    }\\n\\n    function withdrawEther() external onlyOwner {\\n        require(address(this).balance > 0, \\\"Nothing to withdraw\\\");\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n}\\n\",\"keccak256\":\"0x71f1596d2dcbda17b09cf3c3ff55b09f785e0eff08a379a6037e60b7142e8e52\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052604051620019c5380380620019c58339818101604052810190620000299190620001b6565b620000496200003d620000d360201b60201c565b620000db60201b60201c565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000250565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001b08162000236565b92915050565b60008060408385031215620001d057620001cf62000231565b5b6000620001e0858286016200019f565b9250506020620001f3858286016200019f565b9150509250929050565b60006200020a8262000211565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200024181620001fd565b81146200024d57600080fd5b50565b61176580620002606000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610f74565b610210565b6040516100cb959493929190611338565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610f74565b610253565b005b34801561010957600080fd5b506101126105c8565b60405161011f919061131d565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610f74565b6105ce565b60405161015c919061131d565b60405180910390f35b34801561017157600080fd5b5061017a61080d565b005b34801561018857600080fd5b50610191610821565b005b34801561019f57600080fd5b506101a86108bc565b6040516101b59190611199565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190610fce565b6108e5565b005b3480156101f357600080fd5b5061020e60048036038101906102099190610f1a565b610ce3565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060040154905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190611199565b60206040518083038186803b1580156102c857600080fd5b505afa1580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190610fa1565b11610340576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610337906112dd565b60405180910390fd5b80426001600083815260200190815260200160002060040154111561039a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610391906111dd565b60405180910390fd5b600015156001600083815260200190815260200160002060030160009054906101000a900460ff16151514610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb906112bd565b60405180910390fd5b60006001600084815260200190815260200160002090508060020154816001015411156105a6576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049557600080fd5b505afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610fa1565b905080471015610512576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105099061127d565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b8152600401610572919061131d565b6000604051808303818588803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b5050505050505b60018160030160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161062c9190611199565b60206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610fa1565b116106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b3906112dd565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b8152600401610717919061131d565b60206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610f47565b6107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d9061125d565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c426107d6919061139c565b8160040181905550600260008154809291906107f19061146e565b9190505550600160025461080591906113f2565b915050919050565b610815610d67565b61081f6000610de5565b565b610829610d67565b6000471161086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906111fd565b60405180910390fd5b6108746108bc565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156108b9573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109429190611199565b60206040518083038186803b15801561095a57600080fd5b505afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190610fa1565b116109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c9906112dd565b60405180910390fd5b8142600160008381526020019081526020016000206004015411610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a229061123d565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a9f9190611199565b60206040518083038186803b158015610ab757600080fd5b505afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef9190610fa1565b90506000805b82811015610c2e576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610b5c9291906111b4565b60206040518083038186803b158015610b7457600080fd5b505afa158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190610fa1565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff1615151415610c1a578280610be89061146e565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610c269061146e565b915050610af5565b5060008111610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c69906112fd565b60405180910390fd5b60006001811115610c8657610c856114e6565b5b856001811115610c9957610c986114e6565b5b1415610cbf5780836001016000828254610cb3919061139c565b92505081905550610cdb565b80836002016000828254610cd3919061139c565b925050819055505b505050505050565b610ceb610d67565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d529061121d565b60405180910390fd5b610d6481610de5565b50565b610d6f610ea9565b73ffffffffffffffffffffffffffffffffffffffff16610d8d6108bc565b73ffffffffffffffffffffffffffffffffffffffff1614610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda9061129d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610ec0816116da565b92915050565b600081519050610ed5816116f1565b92915050565b600081359050610eea81611708565b92915050565b600081359050610eff81611718565b92915050565b600081519050610f1481611718565b92915050565b600060208284031215610f3057610f2f611515565b5b6000610f3e84828501610eb1565b91505092915050565b600060208284031215610f5d57610f5c611515565b5b6000610f6b84828501610ec6565b91505092915050565b600060208284031215610f8a57610f89611515565b5b6000610f9884828501610ef0565b91505092915050565b600060208284031215610fb757610fb6611515565b5b6000610fc584828501610f05565b91505092915050565b60008060408385031215610fe557610fe4611515565b5b6000610ff385828601610ef0565b925050602061100485828601610edb565b9150509250929050565b61101781611426565b82525050565b61102681611438565b82525050565b600061103960158361138b565b91506110448261151a565b602082019050919050565b600061105c60138361138b565b915061106782611543565b602082019050919050565b600061107f60268361138b565b915061108a8261156c565b604082019050919050565b60006110a260118361138b565b91506110ad826115bb565b602082019050919050565b60006110c560108361138b565b91506110d0826115e4565b602082019050919050565b60006110e860108361138b565b91506110f38261160d565b602082019050919050565b600061110b60208361138b565b915061111682611636565b602082019050919050565b600061112e60198361138b565b91506111398261165f565b602082019050919050565b600061115160108361138b565b915061115c82611688565b602082019050919050565b600061117460108361138b565b915061117f826116b1565b602082019050919050565b61119381611464565b82525050565b60006020820190506111ae600083018461100e565b92915050565b60006040820190506111c9600083018561100e565b6111d6602083018461118a565b9392505050565b600060208201905081810360008301526111f68161102c565b9050919050565b600060208201905081810360008301526112168161104f565b9050919050565b6000602082019050818103600083015261123681611072565b9050919050565b6000602082019050818103600083015261125681611095565b9050919050565b60006020820190508181036000830152611276816110b8565b9050919050565b60006020820190508181036000830152611296816110db565b9050919050565b600060208201905081810360008301526112b6816110fe565b9050919050565b600060208201905081810360008301526112d681611121565b9050919050565b600060208201905081810360008301526112f681611144565b9050919050565b6000602082019050818103600083015261131681611167565b9050919050565b6000602082019050611332600083018461118a565b92915050565b600060a08201905061134d600083018861118a565b61135a602083018761118a565b611367604083018661118a565b611374606083018561101d565b611381608083018461118a565b9695505050505050565b600082825260208201905092915050565b60006113a782611464565b91506113b283611464565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113e7576113e66114b7565b5b828201905092915050565b60006113fd82611464565b915061140883611464565b92508282101561141b5761141a6114b7565b5b828203905092915050565b600061143182611444565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061147982611464565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114ac576114ab6114b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b7f446561646c696e65206e6f742065786365656465640000000000000000000000600082015250565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b7f4e4f5420454e4f5547482046554e445300000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f50726f706f73616c20416c726561647920457865637574656400000000000000600082015250565b7f4e6f7420612044414f206d656d62657200000000000000000000000000000000600082015250565b7f414c52454144595f564552494649454400000000000000000000000000000000600082015250565b6116e381611426565b81146116ee57600080fd5b50565b6116fa81611438565b811461170557600080fd5b50565b6002811061171557600080fd5b50565b61172181611464565b811461172c57600080fd5b5056fea2646970667358221220a2e7519d97725938cbd437063d52f970144f5e661f195aa05f42bd43ee28f10464736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610f74565b610210565b6040516100cb959493929190611338565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610f74565b610253565b005b34801561010957600080fd5b506101126105c8565b60405161011f919061131d565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610f74565b6105ce565b60405161015c919061131d565b60405180910390f35b34801561017157600080fd5b5061017a61080d565b005b34801561018857600080fd5b50610191610821565b005b34801561019f57600080fd5b506101a86108bc565b6040516101b59190611199565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190610fce565b6108e5565b005b3480156101f357600080fd5b5061020e60048036038101906102099190610f1a565b610ce3565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16908060040154905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190611199565b60206040518083038186803b1580156102c857600080fd5b505afa1580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190610fa1565b11610340576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610337906112dd565b60405180910390fd5b80426001600083815260200190815260200160002060040154111561039a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610391906111dd565b60405180910390fd5b600015156001600083815260200190815260200160002060030160009054906101000a900460ff16151514610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb906112bd565b60405180910390fd5b60006001600084815260200190815260200160002090508060020154816001015411156105a6576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049557600080fd5b505afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610fa1565b905080471015610512576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105099061127d565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b8152600401610572919061131d565b6000604051808303818588803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b5050505050505b60018160030160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161062c9190611199565b60206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610fa1565b116106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b3906112dd565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b8152600401610717919061131d565b60206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610f47565b6107a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079d9061125d565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c426107d6919061139c565b8160040181905550600260008154809291906107f19061146e565b9190505550600160025461080591906113f2565b915050919050565b610815610d67565b61081f6000610de5565b565b610829610d67565b6000471161086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906111fd565b60405180910390fd5b6108746108bc565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156108b9573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109429190611199565b60206040518083038186803b15801561095a57600080fd5b505afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190610fa1565b116109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c9906112dd565b60405180910390fd5b8142600160008381526020019081526020016000206004015411610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a229061123d565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a9f9190611199565b60206040518083038186803b158015610ab757600080fd5b505afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef9190610fa1565b90506000805b82811015610c2e576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610b5c9291906111b4565b60206040518083038186803b158015610b7457600080fd5b505afa158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190610fa1565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff1615151415610c1a578280610be89061146e565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610c269061146e565b915050610af5565b5060008111610c72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c69906112fd565b60405180910390fd5b60006001811115610c8657610c856114e6565b5b856001811115610c9957610c986114e6565b5b1415610cbf5780836001016000828254610cb3919061139c565b92505081905550610cdb565b80836002016000828254610cd3919061139c565b925050819055505b505050505050565b610ceb610d67565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d529061121d565b60405180910390fd5b610d6481610de5565b50565b610d6f610ea9565b73ffffffffffffffffffffffffffffffffffffffff16610d8d6108bc565b73ffffffffffffffffffffffffffffffffffffffff1614610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda9061129d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610ec0816116da565b92915050565b600081519050610ed5816116f1565b92915050565b600081359050610eea81611708565b92915050565b600081359050610eff81611718565b92915050565b600081519050610f1481611718565b92915050565b600060208284031215610f3057610f2f611515565b5b6000610f3e84828501610eb1565b91505092915050565b600060208284031215610f5d57610f5c611515565b5b6000610f6b84828501610ec6565b91505092915050565b600060208284031215610f8a57610f89611515565b5b6000610f9884828501610ef0565b91505092915050565b600060208284031215610fb757610fb6611515565b5b6000610fc584828501610f05565b91505092915050565b60008060408385031215610fe557610fe4611515565b5b6000610ff385828601610ef0565b925050602061100485828601610edb565b9150509250929050565b61101781611426565b82525050565b61102681611438565b82525050565b600061103960158361138b565b91506110448261151a565b602082019050919050565b600061105c60138361138b565b915061106782611543565b602082019050919050565b600061107f60268361138b565b915061108a8261156c565b604082019050919050565b60006110a260118361138b565b91506110ad826115bb565b602082019050919050565b60006110c560108361138b565b91506110d0826115e4565b602082019050919050565b60006110e860108361138b565b91506110f38261160d565b602082019050919050565b600061110b60208361138b565b915061111682611636565b602082019050919050565b600061112e60198361138b565b91506111398261165f565b602082019050919050565b600061115160108361138b565b915061115c82611688565b602082019050919050565b600061117460108361138b565b915061117f826116b1565b602082019050919050565b61119381611464565b82525050565b60006020820190506111ae600083018461100e565b92915050565b60006040820190506111c9600083018561100e565b6111d6602083018461118a565b9392505050565b600060208201905081810360008301526111f68161102c565b9050919050565b600060208201905081810360008301526112168161104f565b9050919050565b6000602082019050818103600083015261123681611072565b9050919050565b6000602082019050818103600083015261125681611095565b9050919050565b60006020820190508181036000830152611276816110b8565b9050919050565b60006020820190508181036000830152611296816110db565b9050919050565b600060208201905081810360008301526112b6816110fe565b9050919050565b600060208201905081810360008301526112d681611121565b9050919050565b600060208201905081810360008301526112f681611144565b9050919050565b6000602082019050818103600083015261131681611167565b9050919050565b6000602082019050611332600083018461118a565b92915050565b600060a08201905061134d600083018861118a565b61135a602083018761118a565b611367604083018661118a565b611374606083018561101d565b611381608083018461118a565b9695505050505050565b600082825260208201905092915050565b60006113a782611464565b91506113b283611464565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113e7576113e66114b7565b5b828201905092915050565b60006113fd82611464565b915061140883611464565b92508282101561141b5761141a6114b7565b5b828203905092915050565b600061143182611444565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061147982611464565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114ac576114ab6114b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b7f446561646c696e65206e6f742065786365656465640000000000000000000000600082015250565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b7f4e4f5420454e4f5547482046554e445300000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f50726f706f73616c20416c726561647920457865637574656400000000000000600082015250565b7f4e6f7420612044414f206d656d62657200000000000000000000000000000000600082015250565b7f414c52454144595f564552494649454400000000000000000000000000000000600082015250565b6116e381611426565b81146116ee57600080fd5b50565b6116fa81611438565b811461170557600080fd5b50565b6002811061171557600080fd5b50565b61172181611464565b811461172c57600080fd5b5056fea2646970667358221220a2e7519d97725938cbd437063d52f970144f5e661f195aa05f42bd43ee28f10464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 194,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "proposals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Proposal)189_storage)"
      },
      {
        "astId": 196,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "numProposals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "nftMarketplace",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IFakeNFTMarketplace)155"
      },
      {
        "astId": 202,
        "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
        "label": "cryptoDevsNFT",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ICryptoDevsNFT)172"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ICryptoDevsNFT)172": {
        "encoding": "inplace",
        "label": "contract ICryptoDevsNFT",
        "numberOfBytes": "20"
      },
      "t_contract(IFakeNFTMarketplace)155": {
        "encoding": "inplace",
        "label": "contract IFakeNFTMarketplace",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)189_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CryptoDevsDAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)189_storage"
      },
      "t_struct(Proposal)189_storage": {
        "encoding": "inplace",
        "label": "struct CryptoDevsDAO.Proposal",
        "members": [
          {
            "astId": 176,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "nftTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 178,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "yayVotes",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 180,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "nayVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 182,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 184,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "deadline",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 188,
            "contract": "contracts/CryptoDevsDAO.sol:CryptoDevsDAO",
            "label": "voters",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}